buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "4.6.1"
group= "com.buildcraft.additionalpipes" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "additionalpipes"

minecraft {
    version = "1.7.10-10.13.3.1388-1.7.10"
    runDir = "minecraft"
}

dependencies {
		compile name: 'buildcraft', version: "7.0.8", classifier: "dev", ext: 'jar'
		compile name: 'buildcraft-compat', version: "7.0.9", classifier: "dev", ext: 'jar'
		compile files("lib/logisticspipes-0.9.2.32-dev.jar")
}

repositories {
	ivy {
		name "BuildCraft"
		artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
	}
	
	ivy {
		name "BuildCraftCompat"
		artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraftCompat/[revision]/[module]-[revision]-[classifier].[ext]"
	}
}

sourceSets {
    api {
        java {
            srcDir 'src/java/buildcraft/additionalpipes/api'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
		
		//exclude Paint.NET pdn files
		exclude '**/*.pdn'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        
		include 'mcmod.info'
		include 'AdditionalPipes.java'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}
